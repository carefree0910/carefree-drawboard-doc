"use strict";(self.webpackChunkcarefree_drawboard_doc=self.webpackChunkcarefree_drawboard_doc||[]).push([[9321],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),d=o,g=u["".concat(c,".").concat(d)]||u[d]||f[d]||a;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3730:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>f,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={id:"configurations",title:"Configurations"},i=void 0,s={unversionedId:"user-guides/configurations",id:"user-guides/configurations",title:"Configurations",description:"* Config",source:"@site/docs/user-guides/configurations.md",sourceDirName:"user-guides",slug:"/user-guides/configurations",permalink:"/carefree-drawboard-doc/docs/user-guides/configurations",draft:!1,tags:[],version:"current",lastUpdatedAt:1686029842,formattedLastUpdatedAt:"Jun 6, 2023",frontMatter:{id:"configurations",title:"Configurations"},sidebar:"docs",previous:{title:"Keyboard Shortcuts",permalink:"/carefree-drawboard-doc/docs/user-guides/keyboard-shortcuts"},next:{title:"Hosting",permalink:"/carefree-drawboard-doc/docs/user-guides/hosting"}},c={},l=[],p={toc:l},u="wrapper";function f(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"API reference",type:"info"},(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/api-reference/Config"},"Config")))),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"carefree-drawboard")," \ud83c\udfa8 is designed to hold configurations in one single file - the ",(0,o.kt)("inlineCode",{parentName:"p"},"cfconfig.py")," file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="constants.py"',title:'"constants.py"'},'DEFAULT_ENTRY = "app"\nFRONTEND_PORT = "5123"\nBACKEND_PORT = "8123"\n\nUPLOAD_ROOT_KEY = "CFDRAW_UPLOAD_ROOT"\nUPLOAD_ROOT = Path("~").expanduser() / ".cache" / "carefree-draw"\n\ndef get_upload_root() -> str:\n    return os.environ.get(UPLOAD_ROOT_KEY, str(UPLOAD_ROOT))\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="config.py"',title:'"config.py"'},"@dataclass\nclass Config:\n    entry: str = constants.DEFAULT_ENTRY\n    frontend_port: str = constants.FRONTEND_PORT\n    backend_port: str = constants.BACKEND_PORT\n    backend_hosting_url: Optional[str] = None\n    upload_root: str = field(default_factory=constants.get_upload_root)\n    board_settings: BoardSettings = field(default_factory=BoardSettings)\n    extra_plugins: ExtraPlugins = field(default_factory=ExtraPlugins)\n    use_react_strict_mode: bool = False\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="cfconfig.py"',title:'"cfconfig.py"'},"from cfdraw import *\n\nconfig = Config()\n")),(0,o.kt)("p",null,"The most commonly used configuration is probably the ",(0,o.kt)("inlineCode",{parentName:"p"},"upload_root")," property, which is used to specify the root directory for storing uploaded stuffs (projects, creations, etc.):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="cfconfig.py"',title:'"cfconfig.py"'},'from cfdraw import *\n\nconfig = Config(\n    # highlight-start\n    # This tells us to use `cwd` to store the uploaded stuffs\n    upload_root="./",\n    # highlight-end\n)\n')),(0,o.kt)("p",null,"If you want to customize some overall settings for the drawboard \ud83c\udfa8, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"board_settings")," property. For example, if you want to switch the default language to Chinese, you can:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="cfconfig.py"',title:'"cfconfig.py"'},"from cfdraw import *\n\nconfig = Config(\n    # highlight-start\n    board_settings=BoardSettings(\n        globalSettings=GlobalSettings(\n            defaultLang=Lang.ZH,\n        )\n    )\n    # highlight-end\n)\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"carefree-drawboard")," \ud83c\udfa8 also provides the ",(0,o.kt)("inlineCode",{parentName:"p"},"extra_plugins")," property in case you need. For example, if you want to place your logo on the ",(0,o.kt)("inlineCode",{parentName:"p"},"lt")," (",(0,o.kt)("strong",{parentName:"p"},"l"),"eft-",(0,o.kt)("strong",{parentName:"p"},"t"),"op) corner of the drawboard \ud83c\udfa8, you can:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="cfconfig.py"',title:'"cfconfig.py"'},'from cfdraw import *\n\nconfig = Config(\n    # highlight-start\n    extra_plugins=ExtraPlugins(\n        logo=ILogoSettings(\n            iconW=300,\n            iconH=99,\n            pivot=PivotType.LT,\n            src="https://url/to/your/logo.png",\n        )\n    ),\n    # highlight-end\n)\n')))}f.isMDXComponent=!0}}]);