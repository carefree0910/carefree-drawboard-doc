"use strict";(self.webpackChunkcarefree_drawboard_doc=self.webpackChunkcarefree_drawboard_doc||[]).push([[7486],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,d=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),s=p(n),f=o,m=s["".concat(d,".").concat(f)]||s[f]||c[f]||l;return n?a.createElement(m,i(i({ref:t},u),{},{components:n})):a.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,i=new Array(l);i[0]=f;var r={};for(var d in t)hasOwnProperty.call(t,d)&&(r[d]=t[d]);r.originalType=e,r[s]="string"==typeof e?e:o,i[1]=r;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},6873:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294);function o(e){let{type:t,defaultValue:n,required:o,appendix:l}=e;const i=a.createElement(a.Fragment,null,l&&a.createElement(a.Fragment,null," ","- ",a.createElement("code",null,l)));return a.createElement("p",null,"[ ",a.createElement("strong",null,t),","," ",o?a.createElement(a.Fragment,null,a.createElement("em",null,"required"),i):a.createElement(a.Fragment,null,a.createElement("em",null,"default"),": ",a.createElement("code",null,n),i)," ","]")}},1871:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>m,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var a=n(7462),o=n(7294),l=n(3905),i=n(6873);const r={id:"IPluginSettings",title:"IPluginSettings"},d=void 0,p={unversionedId:"api-reference/IPluginSettings",id:"api-reference/IPluginSettings",title:"IPluginSettings",description:"w",source:"@site/docs/api-reference/IPluginSettings.md",sourceDirName:"api-reference",slug:"/api-reference/IPluginSettings",permalink:"/carefree-drawboard-doc/docs/api-reference/IPluginSettings",draft:!1,tags:[],version:"current",lastUpdatedAt:1686015647,formattedLastUpdatedAt:"Jun 6, 2023",frontMatter:{id:"IPluginSettings",title:"IPluginSettings"},sidebar:"docs",previous:{title:"Built-in Methods",permalink:"/carefree-drawboard-doc/docs/api-reference/Built-in-Methods"},next:{title:"IPluginInfo",permalink:"/carefree-drawboard-doc/docs/api-reference/IPluginInfo"}},u={},s=[{value:"<code>w</code>",id:"w",level:3},{value:"<code>h</code>",id:"h",level:3},{value:"<code>nodeConstraint</code>",id:"nodeconstraint",level:3},{value:"<code>nodeConstraintRules</code>",id:"nodeconstraintrules",level:3},{value:"<code>NodeConstraintRules</code>",id:"nodeconstraintrules-1",level:4},{value:"<code>nodeConstraintValidator</code>",id:"nodeconstraintvalidator",level:3},{value:"<code>src</code>",id:"src",level:3},{value:"<code>tooltip</code>",id:"tooltip",level:3},{value:"<code>pivot</code>",id:"pivot",level:3},{value:"<code>follow</code>",id:"follow",level:3},{value:"<code>expandOffsetX</code>",id:"expandoffsetx",level:3},{value:"<code>expandOffsetY</code>",id:"expandoffsety",level:3},{value:"<code>iconW</code>",id:"iconw",level:3},{value:"<code>iconH</code>",id:"iconh",level:3},{value:"<code>offsetX</code>",id:"offsetx",level:3},{value:"<code>offsetY</code>",id:"offsety",level:3},{value:"<code>bgOpacity</code>",id:"bgopacity",level:3},{value:"<code>useModal</code>",id:"usemodal",level:3},{value:"<code>keepOpen</code>",id:"keepopen",level:3},{value:"<code>expandOpacity</code>",id:"expandopacity",level:3},{value:"<code>expandProps</code>",id:"expandprops",level:3},{value:"<code>pluginInfo</code>",id:"plugininfo",level:3},{value:"<code>buttonProps</code>",id:"buttonprops",level:3},{value:"<code>no_offload</code>",id:"no_offload",level:3}],c={toc:s},f="wrapper";function m(e){let{components:t,...n}=e;return(0,l.kt)(f,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h3",{id:"w"},(0,l.kt)("inlineCode",{parentName:"h3"},"w")),(0,l.kt)(i.Z,{type:"int",required:!0,mdxType:"Badget"}),(0,l.kt)("p",null,"Width of the ",(0,l.kt)("inlineCode",{parentName:"p"},"expand panel"),"."),(0,l.kt)("h3",{id:"h"},(0,l.kt)("inlineCode",{parentName:"h3"},"h")),(0,l.kt)(i.Z,{type:"int",required:!0,mdxType:"Badget"}),(0,l.kt)("p",null,"Height of the ",(0,l.kt)("inlineCode",{parentName:"p"},"expand panel"),"."),(0,l.kt)("h3",{id:"nodeconstraint"},(0,l.kt)("inlineCode",{parentName:"h3"},"nodeConstraint")),(0,l.kt)(i.Z,{type:"NodeConstraints | None",defaultValue:"None",mdxType:"Badget"}),(0,l.kt)("p",null,"Specify when the plugin will be shown."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"If set to ",(0,l.kt)("inlineCode",{parentName:"li"},"none"),", the plugin will always be shown."),(0,l.kt)("li",{parentName:"ul"},"If set to ",(0,l.kt)("inlineCode",{parentName:"li"},"anyNode"),", the plugin will be shown when any node is selected."),(0,l.kt)("li",{parentName:"ul"},"If set to ",(0,l.kt)("inlineCode",{parentName:"li"},"singleNode"),", the plugin will be shown when only one node is selected."),(0,l.kt)("li",{parentName:"ul"},"If set to ",(0,l.kt)("inlineCode",{parentName:"li"},"multiNode"),", the plugin will be shown when more than one node is selected."),(0,l.kt)("li",{parentName:"ul"},"Otherwise, the plugin will be shown when the selected node is of the specified type.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="cfdraw/parsers/noli.py"',title:'"cfdraw/parsers/noli.py"'},'class NodeConstraints(str, Enum):\n    # single node\n    SVG = "svg"\n    TEXT = "text"\n    IMAGE = "image"\n    PATH = "path"\n    NOLI_FRAME = "noliFrame"\n    NOLI_TEXT_FRAME = "noliTextFrame"\n    # group\n    GROUP = "group"\n    # special\n    NONE = "none"\n    ANY_NODE = "anyNode"\n    SINGLE_NODE = "singleNode"\n    MULTI_NODE = "multiNode"\n')),(0,l.kt)("h3",{id:"nodeconstraintrules"},(0,l.kt)("inlineCode",{parentName:"h3"},"nodeConstraintRules")),(0,l.kt)(i.Z,{type:"NodeConstraintRules | None",defaultValue:"None",mdxType:"Badget"}),(0,l.kt)("p",null,"Specify the complex rule of the node constraint."),(0,l.kt)("p",null,"Will work together with ",(0,l.kt)("inlineCode",{parentName:"p"},"nodeConstraint"),", but it is often not necessary to use ",(0,l.kt)("inlineCode",{parentName:"p"},"nodeConstraint")," when this field is set."),(0,l.kt)("h4",{id:"nodeconstraintrules-1"},(0,l.kt)("inlineCode",{parentName:"h4"},"NodeConstraintRules")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"some")),(0,l.kt)(i.Z,{type:"List[NodeConstraints] | None",defaultValue:"None",mdxType:"Badget"}),(0,l.kt)("p",{parentName:"li"},"Some of the constraints must be satisfied.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"every")),(0,l.kt)(i.Z,{type:"NodeConstraints] | None",defaultValue:"None",mdxType:"Badget"}),(0,l.kt)("p",{parentName:"li"},"Every constraint must be satisfied.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"exactly")),(0,l.kt)(i.Z,{type:"NodeConstraints] | None",defaultValue:"None",mdxType:"Badget"}),(0,l.kt)("p",{parentName:"li"},"The exact constraints. This is useful when we want to constrain certain number of nodes as well as their types."))),(0,l.kt)("h3",{id:"nodeconstraintvalidator"},(0,l.kt)("inlineCode",{parentName:"h3"},"nodeConstraintValidator")),(0,l.kt)(i.Z,{type:"str | None",defaultValue:"None",mdxType:"Badget"}),(0,l.kt)("p",null,"The universal fallback."),(0,l.kt)("p",null,"It specifies the name of the validator registered by ",(0,l.kt)("inlineCode",{parentName:"p"},"register_node_validator"),". This is used when the ",(0,l.kt)("inlineCode",{parentName:"p"},"nodeConstraint")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"nodeConstraintRules")," cannot represent the desired constraint."),(0,l.kt)("p",null,"For example, if we want to display the plugin only if the selected ",(0,l.kt)("inlineCode",{parentName:"p"},"Node")," is a ",(0,l.kt)("inlineCode",{parentName:"p"},"Text")," and its ",(0,l.kt)("inlineCode",{parentName:"p"},"text")," is ",(0,l.kt)("inlineCode",{parentName:"p"},'"Hello World"'),", we can do the following:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="app.py"',title:'"app.py"'},'# highlight-next-line\n@register_node_validator("hello_world")\ndef validate_variation(data: ISocketRequest) -> bool:\n    if data.nodeData.type != SingleNodeType.TEXT:\n        return False\n    return data.nodeData.text == "Hello World"\n\n\nclass Plugin(IFieldsPlugin):\n    @property\n    def settings(self) -> IPluginSettings:\n        return IPluginSettings(\n            ...,\n            # highlight-next-line\n            nodeConstraintValidator="hello_world",\n        )\n')),(0,l.kt)("h3",{id:"src"},(0,l.kt)("inlineCode",{parentName:"h3"},"src")),(0,l.kt)(i.Z,{type:"str | None",defaultValue:"None",mdxType:"Badget"}),(0,l.kt)("p",null,"The image url that will be shown for the plugin."),(0,l.kt)("p",null,"If not specified, we will use a default plugin-ish image."),(0,l.kt)("h3",{id:"tooltip"},(0,l.kt)("inlineCode",{parentName:"h3"},"tooltip")),(0,l.kt)(i.Z,{type:"str | None",defaultValue:"None",mdxType:"Badget"}),(0,l.kt)("p",null,"The tooltip that will be shown for the plugin."),(0,l.kt)("p",null,"It is recommended to specify an informative tooltip, but it's also OK to leave it as ",(0,l.kt)("inlineCode",{parentName:"p"},"None"),", in which case we will not show any tooltip for the plugin."),(0,l.kt)("h3",{id:"pivot"},(0,l.kt)("inlineCode",{parentName:"h3"},"pivot")),(0,l.kt)(i.Z,{type:"PivotType | None",defaultValue:"None",mdxType:"Badget"}),(0,l.kt)("p",null,"Pivot of the plugin."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"If ",(0,l.kt)("inlineCode",{parentName:"li"},"follow")," is set to ",(0,l.kt)("inlineCode",{parentName:"li"},"true"),", the plugin will be shown at the pivot of the selected node."),(0,l.kt)("li",{parentName:"ul"},"Otherwise, the plugin will be shown at the pivot of the entire drawboard \ud83c\udfa8.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="cftool.geometry"',title:'"cftool.geometry"'},'class PivotType(str, Enum):\n    LT = "lt"\n    TOP = "top"\n    RT = "rt"\n    LEFT = "left"\n    CENTER = "center"\n    RIGHT = "right"\n    LB = "lb"\n    BOTTOM = "bottom"\n    RB = "rb"\n')),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"See ",(0,l.kt)("a",{parentName:"p",href:"/docs/reference/terminology#pivot"},"Pivot")," for more details.")),(0,l.kt)("h3",{id:"follow"},(0,l.kt)("inlineCode",{parentName:"h3"},"follow")),(0,l.kt)(i.Z,{type:"bool",defaultValue:"False",mdxType:"Badget"}),(0,l.kt)("p",null,"Whether the plugin follows the selecting ",(0,l.kt)("inlineCode",{parentName:"p"},"Node"),"."),(0,l.kt)("h3",{id:"expandoffsetx"},(0,l.kt)("inlineCode",{parentName:"h3"},"expandOffsetX")),(0,l.kt)(i.Z,{type:"int | None",defaultValue:"None",mdxType:"Badget"}),(0,l.kt)("p",null,"X offset of the ",(0,l.kt)("inlineCode",{parentName:"p"},"expand panel"),"."),(0,l.kt)("h3",{id:"expandoffsety"},(0,l.kt)("inlineCode",{parentName:"h3"},"expandOffsetY")),(0,l.kt)(i.Z,{type:"int | None",defaultValue:"None",mdxType:"Badget"}),(0,l.kt)("p",null,"Y offset of the ",(0,l.kt)("inlineCode",{parentName:"p"},"expand panel"),"."),(0,l.kt)("h3",{id:"iconw"},(0,l.kt)("inlineCode",{parentName:"h3"},"iconW")),(0,l.kt)(i.Z,{type:"int | None",defaultValue:"None",mdxType:"Badget"}),(0,l.kt)("p",null,"Width of the ",(0,l.kt)("inlineCode",{parentName:"p"},"plugin button"),"."),(0,l.kt)("h3",{id:"iconh"},(0,l.kt)("inlineCode",{parentName:"h3"},"iconH")),(0,l.kt)(i.Z,{type:"int | None",defaultValue:"None",mdxType:"Badget"}),(0,l.kt)("p",null,"Height of the ",(0,l.kt)("inlineCode",{parentName:"p"},"plugin button"),"."),(0,l.kt)("h3",{id:"offsetx"},(0,l.kt)("inlineCode",{parentName:"h3"},"offsetX")),(0,l.kt)(i.Z,{type:"int | None",defaultValue:"None",mdxType:"Badget"}),(0,l.kt)("p",null,"X offset of the ",(0,l.kt)("inlineCode",{parentName:"p"},"plugin button"),"."),(0,l.kt)("h3",{id:"offsety"},(0,l.kt)("inlineCode",{parentName:"h3"},"offsetY")),(0,l.kt)(i.Z,{type:"int | None",defaultValue:"None",mdxType:"Badget"}),(0,l.kt)("p",null,"Y offset of the ",(0,l.kt)("inlineCode",{parentName:"p"},"plugin button"),"."),(0,l.kt)("h3",{id:"bgopacity"},(0,l.kt)("inlineCode",{parentName:"h3"},"bgOpacity")),(0,l.kt)(i.Z,{type:"float | None",defaultValue:"None",mdxType:"Badget"}),(0,l.kt)("p",null,"Background opacity of the ",(0,l.kt)("inlineCode",{parentName:"p"},"plugin button"),"."),(0,l.kt)("h3",{id:"usemodal"},(0,l.kt)("inlineCode",{parentName:"h3"},"useModal")),(0,l.kt)(i.Z,{type:"bool",defaultValue:"False",mdxType:"Badget"}),(0,l.kt)("p",null,"Whether the ",(0,l.kt)("inlineCode",{parentName:"p"},"expand panel")," should be a modal."),(0,l.kt)("h3",{id:"keepopen"},(0,l.kt)("inlineCode",{parentName:"h3"},"keepOpen")),(0,l.kt)(i.Z,{type:"bool",defaultValue:"False",mdxType:"Badget"}),(0,l.kt)("p",null,"Whether should we keep the ",(0,l.kt)("inlineCode",{parentName:"p"},"expand panel")," of the plugin open, even when users already clicked on the drawboard."),(0,l.kt)("h3",{id:"expandopacity"},(0,l.kt)("inlineCode",{parentName:"h3"},"expandOpacity")),(0,l.kt)(i.Z,{type:"float | None",defaultValue:"None",mdxType:"Badget"}),(0,l.kt)("p",null,"Background opacity of the ",(0,l.kt)("inlineCode",{parentName:"p"},"expand panel"),"."),(0,l.kt)("h3",{id:"expandprops"},(0,l.kt)("inlineCode",{parentName:"h3"},"expandProps")),(0,l.kt)(i.Z,{type:(0,l.kt)(o.Fragment,null,(0,l.kt)("a",{href:"/carefree-drawboard-doc/docs/api-reference/Types#ichakra"},"IChakra")," | None"),defaultValue:"None",mdxType:"Badget"}),(0,l.kt)("p",null,"Extra ",(0,l.kt)("inlineCode",{parentName:"p"},"chakra")," props of the ",(0,l.kt)("inlineCode",{parentName:"p"},"expand panel"),"."),(0,l.kt)("h3",{id:"plugininfo"},(0,l.kt)("inlineCode",{parentName:"h3"},"pluginInfo")),(0,l.kt)(i.Z,{type:"IPluginInfo",defaultValue:"IPluginInfo()",mdxType:"Badget"}),(0,l.kt)("p",null,"Plugin info."),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Check ",(0,l.kt)("a",{parentName:"p",href:"/docs/api-reference/IPluginInfo"},"here")," for the detailed API reference.")),(0,l.kt)("h3",{id:"buttonprops"},(0,l.kt)("inlineCode",{parentName:"h3"},"buttonProps")),(0,l.kt)(i.Z,{type:"Dict[str, Any] | None",defaultValue:"None",mdxType:"Badget"}),(0,l.kt)("p",null,"Extra (chakra) props of the ",(0,l.kt)("inlineCode",{parentName:"p"},"plugin button"),"."),(0,l.kt)("h3",{id:"no_offload"},(0,l.kt)("inlineCode",{parentName:"h3"},"no_offload")),(0,l.kt)(i.Z,{type:"bool",defaultValue:"False",mdxType:"Badget"}),(0,l.kt)("p",null,"Whether not to offload the plugin to sub-thread when it is executed, useful when you know the plugin is fast enough."),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"This is introduced mainly because some libraries (e.g., ",(0,l.kt)("inlineCode",{parentName:"p"},"matplotlib"),") need to be executed in the main thread.")))}m.isMDXComponent=!0}}]);