"use strict";(self.webpackChunkcarefree_drawboard_doc=self.webpackChunkcarefree_drawboard_doc||[]).push([[5420],{6873:(e,t,n)=>{n.d(t,{Z:()=>i});var l=n(7294);function i(e){let{type:t,defaultValue:n,required:i,appendix:a}=e;const o=l.createElement(l.Fragment,null,a&&l.createElement(l.Fragment,null," ","- ",l.createElement("code",null,a)));return l.createElement("p",null,"[ ",l.createElement("strong",null,t),","," ",i?l.createElement(l.Fragment,null,l.createElement("em",null,"required"),o):l.createElement(l.Fragment,null,l.createElement("em",null,"default"),": ",l.createElement("code",null,n),o)," ","]")}},7375:(e,t,n)=>{n.d(t,{Z:()=>a});var l=n(7294),i=n(2004);function a(e){let{url:t}=e;return l.createElement(l.Fragment,null,l.createElement("div",{align:"center"},l.createElement(i.Z,{playing:!0,controls:!0,url:t})),l.createElement("br",null))}},6040:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>c,frontMatter:()=>r,metadata:()=>u,toc:()=>m});var l=n(7462),i=n(7294),a=n(3905),o=n(7375),d=n(6873);const r={id:"IPluginInfo",title:"IPluginInfo"},p=void 0,u={unversionedId:"api-reference/IPluginInfo",id:"api-reference/IPluginInfo",title:"IPluginInfo",description:"Common",source:"@site/docs/api-reference/IPluginInfo.md",sourceDirName:"api-reference",slug:"/api-reference/IPluginInfo",permalink:"/carefree-drawboard-doc/docs/api-reference/IPluginInfo",draft:!1,tags:[],version:"current",lastUpdatedAt:1685961752,formattedLastUpdatedAt:"Jun 5, 2023",frontMatter:{id:"IPluginInfo",title:"IPluginInfo"},sidebar:"docs",previous:{title:"IPluginSettings",permalink:"/carefree-drawboard-doc/docs/api-reference/IPluginSettings"},next:{title:"ISocketRequest",permalink:"/carefree-drawboard-doc/docs/api-reference/ISocketRequest"}},s={},m=[{value:"Common",id:"common",level:2},{value:"<code>retryInterval</code>",id:"retryinterval",level:3},{value:"<code>updateInterval</code>",id:"updateinterval",level:3},{value:"<code>closeOnSubmit</code>",id:"closeonsubmit",level:3},{value:"<code>toastOnSubmit</code>",id:"toastonsubmit",level:3},{value:"<code>toastMessageOnSubmit</code>",id:"toastmessageonsubmit",level:3},{value:"<code>IFieldsPluginInfo</code>",id:"ifieldsplugininfo",level:2},{value:"<code>header</code>",id:"header",level:3},{value:"<code>definitions</code>",id:"definitions",level:3},{value:"<code>numColumns</code>",id:"numcolumns",level:3},{value:"Available Fields",id:"available-fields",level:3},{value:"<code>IBaseField</code>",id:"ibasefield",level:3},{value:"<code>label</code>",id:"label",level:4},{value:"<code>tooltip</code>",id:"tooltip",level:4},{value:"<code>props</code>",id:"props",level:4},{value:"<code>numRows</code>",id:"numrows",level:4},{value:"<code>ITextField</code>",id:"itextfield",level:3},{value:"<code>default</code>",id:"default",level:4},{value:"<code>IImageField</code>",id:"iimagefield",level:3},{value:"<code>default</code>",id:"default-1",level:4},{value:"<code>INumberField</code>",id:"inumberfield",level:3},{value:"<code>default</code>",id:"default-2",level:4},{value:"<code>min</code>",id:"min",level:4},{value:"<code>max</code>",id:"max",level:4},{value:"<code>step</code>",id:"step",level:4},{value:"<code>isInt</code>",id:"isint",level:4},{value:"<code>scale</code>",id:"scale",level:4},{value:"<code>precision</code>",id:"precision",level:4},{value:"<code>ISelectField</code>",id:"iselectfield",level:3},{value:"<code>options</code>",id:"options",level:4},{value:"<code>default</code>",id:"default-3",level:4},{value:"<code>isMulti</code>",id:"ismulti",level:4},{value:"<code>I18NSelectField</code>",id:"i18nselectfield",level:3},{value:"<code>mapping</code>",id:"mapping",level:4},{value:"<code>default</code>",id:"default-4",level:4},{value:"<code>isMulti</code>",id:"ismulti-1",level:4},{value:"Example",id:"example",level:4},{value:"<code>ISelectLocalField</code>",id:"iselectlocalfield",level:3},{value:"<code>path</code>",id:"path",level:4},{value:"<code>default</code>",id:"default-5",level:4},{value:"<code>regex</code>",id:"regex",level:4},{value:"<code>noExt</code>",id:"noext",level:4},{value:"<code>onlyFiles</code>",id:"onlyfiles",level:4},{value:"<code>defaultPlaceholder</code>",id:"defaultplaceholder",level:4},{value:"<code>isMulti</code>",id:"ismulti-2",level:4},{value:"<code>IBooleanField</code>",id:"ibooleanfield",level:3},{value:"<code>default</code>",id:"default-6",level:4},{value:"<code>IColorField</code>",id:"icolorfield",level:3},{value:"<code>default</code>",id:"default-7",level:4},{value:"<code>IListField</code>",id:"ilistfield",level:3},{value:"<code>item</code>",id:"item",level:4},{value:"<code>default</code>",id:"default-8",level:4},{value:"Example",id:"example-1",level:4},{value:"<code>IChatPluginInfo</code>",id:"ichatplugininfo",level:2},{value:"<code>initialText</code>",id:"initialtext",level:3},{value:"<code>IPluginGroupInfo</code>",id:"iplugingroupinfo",level:2},{value:"<code>header</code>",id:"header-1",level:3},{value:"<code>plugins</code>",id:"plugins",level:3}],h={toc:m},f="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(f,(0,l.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"common"},"Common"),(0,a.kt)("h3",{id:"retryinterval"},(0,a.kt)("inlineCode",{parentName:"h3"},"retryInterval")),(0,a.kt)(d.Z,{type:"int",defaultValue:"None",mdxType:"Badget"}),(0,a.kt)("p",null,"If not ",(0,a.kt)("inlineCode",{parentName:"p"},"None"),", the plugin will retry in ",(0,a.kt)("inlineCode",{parentName:"p"},"retryInterval")," ms when exception occurred."),(0,a.kt)("h3",{id:"updateinterval"},(0,a.kt)("inlineCode",{parentName:"h3"},"updateInterval")),(0,a.kt)(d.Z,{type:"int",defaultValue:"None",mdxType:"Badget"}),(0,a.kt)("p",null,"If not ",(0,a.kt)("inlineCode",{parentName:"p"},"None"),", the plugin will be called every ",(0,a.kt)("inlineCode",{parentName:"p"},"updateInterval")," ms."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"This is dangerous to use, please don't use it unless you do need it.")),(0,a.kt)("h3",{id:"closeonsubmit"},(0,a.kt)("inlineCode",{parentName:"h3"},"closeOnSubmit")),(0,a.kt)(d.Z,{type:"bool",defaultValue:"True",mdxType:"Badget"}),(0,a.kt)("p",null,"Whether close the ",(0,a.kt)("inlineCode",{parentName:"p"},"expand panel")," when the submit button is clicked."),(0,a.kt)("h3",{id:"toastonsubmit"},(0,a.kt)("inlineCode",{parentName:"h3"},"toastOnSubmit")),(0,a.kt)(d.Z,{type:"bool",defaultValue:"True",mdxType:"Badget"}),(0,a.kt)("p",null,"Whether trigger a toast message when the submit button is clicked."),(0,a.kt)("h3",{id:"toastmessageonsubmit"},(0,a.kt)("inlineCode",{parentName:"h3"},"toastMessageOnSubmit")),(0,a.kt)(d.Z,{type:"str",defaultValue:"None",mdxType:"Badget"}),(0,a.kt)("p",null,"The message of the toast."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"If it is ",(0,a.kt)("inlineCode",{parentName:"li"},"None"),", default toast message will be used."),(0,a.kt)("li",{parentName:"ul"},"Only take effect when ",(0,a.kt)("a",{parentName:"li",href:"#toastonsubmit"},"toastOnSubmit")," is ",(0,a.kt)("inlineCode",{parentName:"li"},"True"),"."))),(0,a.kt)("h2",{id:"ifieldsplugininfo"},(0,a.kt)("inlineCode",{parentName:"h2"},"IFieldsPluginInfo")),(0,a.kt)("p",null,"This contains the specific properties of the ",(0,a.kt)("a",{parentName:"p",href:"/docs/plugins/IFieldsPlugin"},(0,a.kt)("inlineCode",{parentName:"a"},"IFieldsPlugin")),"."),(0,a.kt)("h3",{id:"header"},(0,a.kt)("inlineCode",{parentName:"h3"},"header")),(0,a.kt)(d.Z,{type:(0,a.kt)("a",{href:"/carefree-drawboard-doc/docs/api-reference/Types#istr"},"IStr"),defaultValue:"None",mdxType:"Badget"}),(0,a.kt)("p",null,"Header of the plugin."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"If it is ",(0,a.kt)("inlineCode",{parentName:"p"},"None"),", we will use the registered name of the plugin as the header (with the first letter capitalized).")),(0,a.kt)("h3",{id:"definitions"},(0,a.kt)("inlineCode",{parentName:"h3"},"definitions")),(0,a.kt)(d.Z,{type:(0,a.kt)(i.Fragment,null,"Dict[str, ",(0,a.kt)("a",{href:"/carefree-drawboard-doc/docs/api-reference/Types#ifielddefinition"},"IFieldDefinition"),"]"),defaultValue:"None",mdxType:"Badget"}),(0,a.kt)("p",null,"Field definitions, this is what we customize most."),(0,a.kt)("h3",{id:"numcolumns"},(0,a.kt)("inlineCode",{parentName:"h3"},"numColumns")),(0,a.kt)(d.Z,{type:"int | None",defaultValue:"None",mdxType:"Badget"}),(0,a.kt)("p",null,"Number of columns that will be used to arrange the input fields."),(0,a.kt)("h3",{id:"available-fields"},"Available Fields"),(0,a.kt)("p",null,"There are plenty of available fields and they should be able to cover most of your use cases."),(0,a.kt)("h3",{id:"ibasefield"},(0,a.kt)("inlineCode",{parentName:"h3"},"IBaseField")),(0,a.kt)("p",null,"Every ",(0,a.kt)("inlineCode",{parentName:"p"},"I*Field")," inherit from ",(0,a.kt)("inlineCode",{parentName:"p"},"IBaseField"),", and they will all share the following common properties:"),(0,a.kt)("h4",{id:"label"},(0,a.kt)("inlineCode",{parentName:"h4"},"label")),(0,a.kt)(d.Z,{type:(0,a.kt)(i.Fragment,null,(0,a.kt)("a",{href:"/carefree-drawboard-doc/docs/api-reference/Types#istr"},"IStr")," | None"),defaultValue:"None",mdxType:"Badget"}),(0,a.kt)("p",null,"The label of the field."),(0,a.kt)("p",null,"Different fields may render the label differently, but we'll make sure the label is noticable."),(0,a.kt)("h4",{id:"tooltip"},(0,a.kt)("inlineCode",{parentName:"h4"},"tooltip")),(0,a.kt)(d.Z,{type:(0,a.kt)(i.Fragment,null,(0,a.kt)("a",{href:"/carefree-drawboard-doc/docs/api-reference/Types#istr"},"IStr")," | None"),defaultValue:"None",mdxType:"Badget"}),(0,a.kt)("p",null,"The tooltip of the field."),(0,a.kt)("p",null,"Different fields may have different tooltip trigger area, but we'll make sure the trigger area is natural."),(0,a.kt)("h4",{id:"props"},(0,a.kt)("inlineCode",{parentName:"h4"},"props")),(0,a.kt)(d.Z,{type:(0,a.kt)(i.Fragment,null,(0,a.kt)("a",{href:"/carefree-drawboard-doc/docs/api-reference/Types#ichakra"},"IChakra")," | None"),defaultValue:"None",mdxType:"Badget"}),(0,a.kt)("p",null,"Extra ",(0,a.kt)("inlineCode",{parentName:"p"},"chakra")," props for the component."),(0,a.kt)("h4",{id:"numrows"},(0,a.kt)("inlineCode",{parentName:"h4"},"numRows")),(0,a.kt)(d.Z,{type:"int | None",defaultValue:"None",mdxType:"Badget"}),(0,a.kt)("p",null,"Number of rows that will be occupied by this field."),(0,a.kt)("p",null,"This is useful when we want our field to be larger. Typically, we can set it to a number not smaller than ",(0,a.kt)("inlineCode",{parentName:"p"},"2")," to make the ",(0,a.kt)("a",{parentName:"p",href:"#itextfield"},(0,a.kt)("inlineCode",{parentName:"a"},"ITextField"))," larger, so users can input text more comfortably."),(0,a.kt)("h3",{id:"itextfield"},(0,a.kt)("inlineCode",{parentName:"h3"},"ITextField")),(0,a.kt)("p",null,"This is used to collect a piece of text from the user."),(0,a.kt)("h4",{id:"default"},(0,a.kt)("inlineCode",{parentName:"h4"},"default")),(0,a.kt)(d.Z,{type:(0,a.kt)("a",{href:"/carefree-drawboard-doc/docs/api-reference/Types#istr"},"IStr"),defaultValue:"None",mdxType:"Badget"}),(0,a.kt)("p",null,"Default text of the field."),(0,a.kt)("h3",{id:"iimagefield"},(0,a.kt)("inlineCode",{parentName:"h3"},"IImageField")),(0,a.kt)("p",null,"This is used to collect an image url from the user."),(0,a.kt)("h4",{id:"default-1"},(0,a.kt)("inlineCode",{parentName:"h4"},"default")),(0,a.kt)(d.Z,{type:(0,a.kt)("a",{href:"/carefree-drawboard-doc/docs/api-reference/Types#istr"},"IStr"),defaultValue:"None",mdxType:"Badget"}),(0,a.kt)("p",null,"Default url of the field."),(0,a.kt)("h3",{id:"inumberfield"},(0,a.kt)("inlineCode",{parentName:"h3"},"INumberField")),(0,a.kt)("p",null,"This is used to collect a number from the user."),(0,a.kt)("h4",{id:"default-2"},(0,a.kt)("inlineCode",{parentName:"h4"},"default")),(0,a.kt)(d.Z,{type:"float",required:!0,mdxType:"Badget"}),(0,a.kt)("p",null,"Default value of the field."),(0,a.kt)("h4",{id:"min"},(0,a.kt)("inlineCode",{parentName:"h4"},"min")),(0,a.kt)(d.Z,{type:"float | None",defaultValue:"None",mdxType:"Badget"}),(0,a.kt)("p",null,"Minimum value of the field."),(0,a.kt)("h4",{id:"max"},(0,a.kt)("inlineCode",{parentName:"h4"},"max")),(0,a.kt)(d.Z,{type:"float | None",defaultValue:"None",mdxType:"Badget"}),(0,a.kt)("p",null,"Maximum value of the field."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"If ",(0,a.kt)("inlineCode",{parentName:"p"},"min")," & ",(0,a.kt)("inlineCode",{parentName:"p"},"max")," are both provided, we will render a ",(0,a.kt)("strong",{parentName:"p"},"Slider")," instead of a number ",(0,a.kt)("strong",{parentName:"p"},"Input"),".")),(0,a.kt)("h4",{id:"step"},(0,a.kt)("inlineCode",{parentName:"h4"},"step")),(0,a.kt)(d.Z,{type:"float | None",defaultValue:"None",mdxType:"Badget"}),(0,a.kt)("p",null,"Step of the ",(0,a.kt)("strong",{parentName:"p"},"Slider"),", only take effect when ",(0,a.kt)("inlineCode",{parentName:"p"},"min")," & ",(0,a.kt)("inlineCode",{parentName:"p"},"max")," are both provided."),(0,a.kt)("h4",{id:"isint"},(0,a.kt)("inlineCode",{parentName:"h4"},"isInt")),(0,a.kt)(d.Z,{type:"bool | None",defaultValue:"None",mdxType:"Badget"}),(0,a.kt)("p",null,"Whether the number should be an integer."),(0,a.kt)("h4",{id:"scale"},(0,a.kt)("inlineCode",{parentName:"h4"},"scale")),(0,a.kt)(d.Z,{type:"NumberScale | None",defaultValue:"None",mdxType:"Badget"}),(0,a.kt)("p",null,"Scale of the number."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'class NumberScale(str, Enum):\n    LINEAR = "linear"\n    LOGARITHMIC = "logarithmic"\n')),(0,a.kt)("h4",{id:"precision"},(0,a.kt)("inlineCode",{parentName:"h4"},"precision")),(0,a.kt)(d.Z,{type:"int | None",defaultValue:"None",mdxType:"Badget"}),(0,a.kt)("p",null,"Precision of the ",(0,a.kt)("strong",{parentName:"p"},"Slider")," caption, only take effect when ",(0,a.kt)("inlineCode",{parentName:"p"},"min")," & ",(0,a.kt)("inlineCode",{parentName:"p"},"max")," are both provided."),(0,a.kt)("h3",{id:"iselectfield"},(0,a.kt)("inlineCode",{parentName:"h3"},"ISelectField")),(0,a.kt)("p",null,"This is used to collect a / some selection(s) from the user."),(0,a.kt)("h4",{id:"options"},(0,a.kt)("inlineCode",{parentName:"h4"},"options")),(0,a.kt)(d.Z,{type:(0,a.kt)(i.Fragment,null,"List[",(0,a.kt)("a",{href:"/carefree-drawboard-doc/docs/api-reference/Types#istr"},"IStr"),"]"),required:!0,mdxType:"Badget"}),(0,a.kt)("p",null,"The options of the field."),(0,a.kt)("h4",{id:"default-3"},(0,a.kt)("inlineCode",{parentName:"h4"},"default")),(0,a.kt)(d.Z,{type:(0,a.kt)("a",{href:"/carefree-drawboard-doc/docs/api-reference/Types#istr"},"IStr"),required:!0,mdxType:"Badget"}),(0,a.kt)("p",null,"The default value of the field."),(0,a.kt)("h4",{id:"ismulti"},(0,a.kt)("inlineCode",{parentName:"h4"},"isMulti")),(0,a.kt)(d.Z,{type:"bool | None",defaultValue:"None",mdxType:"Badget"}),(0,a.kt)("p",null,"Whether use multi-select."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Currently multi-select is not supported.")),(0,a.kt)("h3",{id:"i18nselectfield"},(0,a.kt)("inlineCode",{parentName:"h3"},"I18NSelectField")),(0,a.kt)("p",null,"This is mainly for accessibility when we want to use ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/Types#i18n"},(0,a.kt)("inlineCode",{parentName:"a"},"I18N"))," as the options."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'class I18NSelectField(IBaseField):\n    mapping: Dict[str, I18N] = Field(\n        ...,\n        description=(\n            "The mapping of the options. "\n            "The key is the \'actual\' option, and the value is the i18n object to be displayed"\n        ),\n    )\n    default: str = Field(..., description="The default \'actual\' option of the field")\n    isMulti: Optional[bool] = Field(None, description="Whether use multi-select")\n')),(0,a.kt)("h4",{id:"mapping"},(0,a.kt)("inlineCode",{parentName:"h4"},"mapping")),(0,a.kt)(d.Z,{type:(0,a.kt)(i.Fragment,null,"Dict[str, ",(0,a.kt)("a",{href:"/carefree-drawboard-doc/docs/api-reference/Types#i18n"},"I18N"),"]"),required:!0,mdxType:"Badget"}),(0,a.kt)("p",null,"The mapping of the options. The key is the ",(0,a.kt)("inlineCode",{parentName:"p"},"actual")," option, and the value is the ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/Types#i18n"},(0,a.kt)("inlineCode",{parentName:"a"},"I18N"))," object to be displayed."),(0,a.kt)("h4",{id:"default-4"},(0,a.kt)("inlineCode",{parentName:"h4"},"default")),(0,a.kt)(d.Z,{type:"str",required:!0,mdxType:"Badget"}),(0,a.kt)("p",null,"The default ",(0,a.kt)("inlineCode",{parentName:"p"},"actual")," option of the field."),(0,a.kt)("h4",{id:"ismulti-1"},(0,a.kt)("inlineCode",{parentName:"h4"},"isMulti")),(0,a.kt)(d.Z,{type:"bool | None",defaultValue:"None",mdxType:"Badget"}),(0,a.kt)("p",null,"Whether use multi-select."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Currently multi-select is not supported.")),(0,a.kt)("h4",{id:"example"},"Example"),(0,a.kt)("p",null,"To use ",(0,a.kt)("inlineCode",{parentName:"p"},"I18NSelectField"),", we often need to define the 'field' separately:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="app.py"',title:'"app.py"'},'from cfdraw import *\n\n\nfoo_field = I18NSelectField(\n    mapping=dict(\n        bar1=I18N(zh="bar1_\u4e2d\u6587", en="bar1_en"),\n        bar2=I18N(zh="bar2_\u4e2d\u6587", en="bar2_en"),\n    ),\n    default="bar2",\n)\n')),(0,a.kt)("p",null,"Let's break it down. First, the ",(0,a.kt)("inlineCode",{parentName:"p"},"mapping"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="app.py"',title:'"app.py"'},'from cfdraw import *\n\n\nfoo_field = I18NSelectField(\n    # highlight-start\n    mapping=dict(\n        bar1=I18N(zh="bar1_\u4e2d\u6587", en="bar1_en"),\n        bar2=I18N(zh="bar2_\u4e2d\u6587", en="bar2_en"),\n    ),\n    # highlight-end\n    default="bar2",\n)\n')),(0,a.kt)("p",null,"indicates that there will be two options: ",(0,a.kt)("inlineCode",{parentName:"p"},"bar1")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"bar2"),", and:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"bar1")," option will be displayed as ",(0,a.kt)("inlineCode",{parentName:"li"},"bar1_\u4e2d\u6587")," in Chinese and ",(0,a.kt)("inlineCode",{parentName:"li"},"bar1_en")," in English."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"bar2")," option will be displayed as ",(0,a.kt)("inlineCode",{parentName:"li"},"bar2_\u4e2d\u6587")," in Chinese and ",(0,a.kt)("inlineCode",{parentName:"li"},"bar2_en")," in English.")),(0,a.kt)("p",null,"Then, the ",(0,a.kt)("inlineCode",{parentName:"p"},"default"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="app.py"',title:'"app.py"'},'from cfdraw import *\n\n\nfoo_field = I18NSelectField(\n    mapping=dict(\n        bar1=I18N(zh="bar1_\u4e2d\u6587", en="bar1_en"),\n        bar2=I18N(zh="bar2_\u4e2d\u6587", en="bar2_en"),\n    ),\n    # highlight-next-line\n    default="bar2",\n)\n')),(0,a.kt)("p",null,"indicates that the default option is ",(0,a.kt)("inlineCode",{parentName:"p"},"bar2"),"."),(0,a.kt)("p",null,"Here's the complete code that utilizes this ",(0,a.kt)("inlineCode",{parentName:"p"},"foo_field"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'showLineNumbers title="app.py"',showLineNumbers:!0,title:'"app.py"'},'from cfdraw import *\n\n\nfoo_field = I18NSelectField(\n    mapping=dict(\n        bar1=I18N(zh="bar1_\u4e2d\u6587", en="bar1_en"),\n        bar2=I18N(zh="bar2_\u4e2d\u6587", en="bar2_en"),\n    ),\n    default="bar2",\n)\n\n\nclass Plugin(IFieldsPlugin):\n    @property\n    def settings(self) -> IPluginSettings:\n        return IPluginSettings(\n            w=300,\n            h=180,\n            pivot=PivotType.LEFT,\n            # highlight-next-line\n            pluginInfo=IFieldsPluginInfo(definitions=dict(foo=foo_field)),\n        )\n\n    async def process(self, data: ISocketRequest) -> str:\n        # highlight-start\n        foo_i18n_d = data.extraData["foo"]\n        foo = foo_field.parse(foo_i18n_d)\n        # highlight-end\n        return f"foo: {foo}"\n\n\nregister_plugin("foo")(Plugin)\napp = App()\n')),(0,a.kt)("p",null,"As the highlighted lines shows:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"In ",(0,a.kt)("inlineCode",{parentName:"li"},"settings"),", we define the ",(0,a.kt)("inlineCode",{parentName:"li"},"foo_field")," as the ",(0,a.kt)("inlineCode",{parentName:"li"},"foo")," field of the plugin."),(0,a.kt)("li",{parentName:"ul"},"In ",(0,a.kt)("inlineCode",{parentName:"li"},"process"),", we first get the ",(0,a.kt)("a",{parentName:"li",href:"/docs/api-reference/Types#i18n"},(0,a.kt)("inlineCode",{parentName:"a"},"I18N"))," object from the ",(0,a.kt)("inlineCode",{parentName:"li"},"foo")," key of ",(0,a.kt)("inlineCode",{parentName:"li"},"extraData"),", then we use the ",(0,a.kt)("inlineCode",{parentName:"li"},"parse")," method of the ",(0,a.kt)("inlineCode",{parentName:"li"},"foo_field")," to get the ",(0,a.kt)("inlineCode",{parentName:"li"},"actual")," option.")),(0,a.kt)("p",null,"And here's a demo video of how this plugin works:"),(0,a.kt)(o.Z,{url:"https://github.com/carefree0910/carefree-drawboard/assets/15677328/f72118d2-846d-48ce-be44-29319e514a3f",mdxType:"Video"}),(0,a.kt)("h3",{id:"iselectlocalfield"},(0,a.kt)("inlineCode",{parentName:"h3"},"ISelectLocalField")),(0,a.kt)("p",null,"This is used to collect local files specified by the user."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"This is handy when we need to load local models for the plugin.")),(0,a.kt)("h4",{id:"path"},(0,a.kt)("inlineCode",{parentName:"h4"},"path")),(0,a.kt)(d.Z,{type:"str",required:!0,mdxType:"Badget"}),(0,a.kt)("p",null,"The local path that you want to read from."),(0,a.kt)("h4",{id:"default-5"},(0,a.kt)("inlineCode",{parentName:"h4"},"default")),(0,a.kt)(d.Z,{type:"str",required:!0,mdxType:"Badget"}),(0,a.kt)("p",null,"The default value of the field."),(0,a.kt)("h4",{id:"regex"},(0,a.kt)("inlineCode",{parentName:"h4"},"regex")),(0,a.kt)(d.Z,{type:"str",required:!0,mdxType:"Badget"}),(0,a.kt)("p",null,"The regex to filter the files / folders."),(0,a.kt)("h4",{id:"noext"},(0,a.kt)("inlineCode",{parentName:"h4"},"noExt")),(0,a.kt)(d.Z,{type:"bool",required:!0,mdxType:"Badget"}),(0,a.kt)("p",null,"Whether to remove the extension."),(0,a.kt)("h4",{id:"onlyfiles"},(0,a.kt)("inlineCode",{parentName:"h4"},"onlyFiles")),(0,a.kt)(d.Z,{type:"bool",required:!0,mdxType:"Badget"}),(0,a.kt)("p",null,"Whether only consider the files."),(0,a.kt)("h4",{id:"defaultplaceholder"},(0,a.kt)("inlineCode",{parentName:"h4"},"defaultPlaceholder")),(0,a.kt)(d.Z,{type:"str",required:!0,mdxType:"Badget"}),(0,a.kt)("p",null,"If provided, it will be inserted to the first of the options and serve as the default value."),(0,a.kt)("h4",{id:"ismulti-2"},(0,a.kt)("inlineCode",{parentName:"h4"},"isMulti")),(0,a.kt)(d.Z,{type:"bool",required:!0,mdxType:"Badget"}),(0,a.kt)("p",null,"Whether use multi-select."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Currently multi-select is not supported.")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"See ",(0,a.kt)("a",{parentName:"p",href:"#example-1"},"Example")," for the usage of this field.")),(0,a.kt)("h3",{id:"ibooleanfield"},(0,a.kt)("inlineCode",{parentName:"h3"},"IBooleanField")),(0,a.kt)("p",null,"This is used to collect a boolean flag from the user."),(0,a.kt)("h4",{id:"default-6"},(0,a.kt)("inlineCode",{parentName:"h4"},"default")),(0,a.kt)(d.Z,{type:"bool",required:!0,mdxType:"Badget"}),(0,a.kt)("p",null,"The default value of the field."),(0,a.kt)("h3",{id:"icolorfield"},(0,a.kt)("inlineCode",{parentName:"h3"},"IColorField")),(0,a.kt)("p",null,"This is used to collect a color from the user."),(0,a.kt)("h4",{id:"default-7"},(0,a.kt)("inlineCode",{parentName:"h4"},"default")),(0,a.kt)(d.Z,{type:(0,a.kt)("a",{href:"/carefree-drawboard-doc/docs/api-reference/Types#istr"},"IStr"),defaultValue:'"#ffffff"',mdxType:"Badget"}),(0,a.kt)("p",null,"The default value of the field."),(0,a.kt)("h3",{id:"ilistfield"},(0,a.kt)("inlineCode",{parentName:"h3"},"IListField")),(0,a.kt)("p",null,"This is used to collect a list of 'forms' from the user."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"This is handy if the corresponding field can be 'stacked' (e.g., multi LoRA, multi ControlNet).")),(0,a.kt)("h4",{id:"item"},(0,a.kt)("inlineCode",{parentName:"h4"},"item")),(0,a.kt)(d.Z,{type:(0,a.kt)(i.Fragment,null,"Dict[str, ",(0,a.kt)("a",{href:"/carefree-drawboard-doc/docs/api-reference/Types#ifielddefinition"},"IFieldDefinition"),"]"),required:!0,mdxType:"Badget"}),(0,a.kt)("p",null,"The definition of the 'form'."),(0,a.kt)("h4",{id:"default-8"},(0,a.kt)("inlineCode",{parentName:"h4"},"default")),(0,a.kt)(d.Z,{type:"List[Any]",defaultValue:"[]",mdxType:"Badget"}),(0,a.kt)("p",null,"The default value of the field."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"In most cases, ",(0,a.kt)("inlineCode",{parentName:"p"},"default")," should be an empty list.")),(0,a.kt)("h4",{id:"example-1"},"Example"),(0,a.kt)("p",null,"Let's show an example on how to implement a field which aims to support multi LoRA:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="app.py"',title:'"app.py"'},'from cfdraw import *\nfrom pathlib import Path\n\nlora_field = IListField(\n    item=dict(\n        model=ISelectLocalField(\n            path=str(Path(__file__).parent / "lora"),\n            noExt=True,\n            onlyFiles=True,\n            regex=".*\\\\.safetensors",\n            defaultPlaceholder="None",\n        ),\n        strength=INumberField(\n            default=1.0,\n            min=0.0,\n            max=4.0,\n            step=0.1,\n            precision=1,\n        ),\n    ),\n)\n')),(0,a.kt)("p",null,"Let's break it down. First, the ",(0,a.kt)("inlineCode",{parentName:"p"},"model"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="app.py"',title:'"app.py"'},'lora_field = IListField(\n    item=dict(\n        # highlight-start\n        model=ISelectLocalField(\n            path=str(Path(__file__).parent / "lora"),\n            noExt=True,\n            onlyFiles=True,\n            regex=".*\\\\.safetensors",\n            defaultPlaceholder="None",\n        ),\n        # highlight-end\n        ...\n    ),\n)\n')),(0,a.kt)("p",null,"These codes do the following things:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"We'll read the files from the ",(0,a.kt)("inlineCode",{parentName:"li"},"lora")," folder in the same directory of ",(0,a.kt)("inlineCode",{parentName:"li"},"app.py"),"."),(0,a.kt)("li",{parentName:"ul"},"The extensions will not be used."),(0,a.kt)("li",{parentName:"ul"},"Only files will be considered."),(0,a.kt)("li",{parentName:"ul"},"Only files with the extension ",(0,a.kt)("inlineCode",{parentName:"li"},".safetensors")," will be considered."),(0,a.kt)("li",{parentName:"ul"},"We'll add a ",(0,a.kt)("inlineCode",{parentName:"li"},"None")," option to the first of the options, and it will be the default value.")),(0,a.kt)("p",null,"Then, the ",(0,a.kt)("inlineCode",{parentName:"p"},"strength"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="app.py"',title:'"app.py"'},"lora_field = IListField(\n    item=dict(\n        ...,\n        # highlight-start\n        strength=INumberField(\n            default=1.0,\n            min=0.0,\n            max=4.0,\n            step=0.1,\n            precision=1,\n        ),\n        # highlight-end\n    ),\n)\n")),(0,a.kt)("p",null,"Nothing special, just a common use case of ",(0,a.kt)("a",{parentName:"p",href:"#inumberfield"},(0,a.kt)("inlineCode",{parentName:"a"},"INumberField")),"."),(0,a.kt)("p",null,"Now, let's see the complete code on how to use this field:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'showLineNumbers title="app.py"',showLineNumbers:!0,title:'"app.py"'},'import json\nfrom cfdraw import *\nfrom pathlib import Path\n\n\nlora_field = IListField(\n    item=dict(\n        model=ISelectLocalField(\n            path=str(Path(__file__).parent / "lora"),\n            noExt=True,\n            onlyFiles=True,\n            regex=".*\\\\.safetensors",\n            defaultPlaceholder="None",\n        ),\n        strength=INumberField(\n            default=1.0,\n            min=0.0,\n            max=4.0,\n            step=0.1,\n            precision=1,\n        ),\n    ),\n)\n\n\nclass Plugin(IFieldsPlugin):\n    @property\n    def settings(self) -> IPluginSettings:\n        return IPluginSettings(\n            w=400,\n            h=300,\n            pivot=PivotType.LEFT,\n            useModal=True,\n            # highlight-next-line\n            pluginInfo=IFieldsPluginInfo(definitions=dict(foo=lora_field)),\n        )\n\n    async def process(self, data: ISocketRequest) -> str:\n        # highlight-next-line\n        json_str = json.dumps(data.extraData["foo"], indent=2)\n        return f"foo: {json_str}"\n\n\nregister_plugin("foo")(Plugin)\napp = App()\n')),(0,a.kt)("p",null,"As the highlighted lines shows:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"In ",(0,a.kt)("inlineCode",{parentName:"li"},"settings"),", we define the ",(0,a.kt)("inlineCode",{parentName:"li"},"lora_field")," as the ",(0,a.kt)("inlineCode",{parentName:"li"},"foo")," field of the plugin."),(0,a.kt)("li",{parentName:"ul"},"In ",(0,a.kt)("inlineCode",{parentName:"li"},"process"),", we dumps the object of the ",(0,a.kt)("inlineCode",{parentName:"li"},"foo")," field to a JSON string.")),(0,a.kt)("p",null,"And here's a demo video of how this plugin works:"),(0,a.kt)(o.Z,{url:"https://github.com/carefree0910/carefree-drawboard/assets/15677328/794b3b6a-7481-4855-be24-395ee87864bf",mdxType:"Video"}),(0,a.kt)("h2",{id:"ichatplugininfo"},(0,a.kt)("inlineCode",{parentName:"h2"},"IChatPluginInfo")),(0,a.kt)("p",null,"This contains the specific properties of the ",(0,a.kt)("a",{parentName:"p",href:"/docs/plugins/IChatPlugin"},(0,a.kt)("inlineCode",{parentName:"a"},"IChatPlugin")),"."),(0,a.kt)("h3",{id:"initialtext"},(0,a.kt)("inlineCode",{parentName:"h3"},"initialText")),(0,a.kt)(d.Z,{type:"str | None",defaultValue:"None",mdxType:"Badget"}),(0,a.kt)("p",null,"The initial text to be displayed in chat."),(0,a.kt)("h2",{id:"iplugingroupinfo"},(0,a.kt)("inlineCode",{parentName:"h2"},"IPluginGroupInfo")),(0,a.kt)("p",null,"This contains the specific properties of the ",(0,a.kt)("a",{parentName:"p",href:"/docs/plugins/IPluginGroup"},(0,a.kt)("inlineCode",{parentName:"a"},"IPluginGroup")),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'class IPluginGroupInfo(IPluginInfo):\n    header: Optional[IStr] = Field(None, description="Header of the plugin group")\n    plugins: Dict[str, Type[IPlugin]] = Field(..., description="Plugins in the group")\n')),(0,a.kt)("h3",{id:"header-1"},(0,a.kt)("inlineCode",{parentName:"h3"},"header")),(0,a.kt)(d.Z,{type:(0,a.kt)("a",{href:"/carefree-drawboard-doc/docs/api-reference/Types#istr"},"IStr"),defaultValue:"None",mdxType:"Badget"}),(0,a.kt)("p",null,"Header of the plugin group."),(0,a.kt)("h3",{id:"plugins"},(0,a.kt)("inlineCode",{parentName:"h3"},"plugins")),(0,a.kt)(d.Z,{type:"Dict[str, Type[IPlugin]]",required:!0,mdxType:"Badget"}),(0,a.kt)("p",null,"Plugins in the group."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"The key should be ",(0,a.kt)("strong",{parentName:"li"},"unique")," universally, and it is recommended to use a self-explanatory name."),(0,a.kt)("li",{parentName:"ul"},"The value of the ",(0,a.kt)("inlineCode",{parentName:"li"},"plugins")," property should be the ",(0,a.kt)("strong",{parentName:"li"},"class")," of the plugin, not the instance."))))}c.isMDXComponent=!0}}]);